name: Release
# This workflow is triggered manually
on:
  workflow_dispatch:
    inputs:
      version_bump_type:
        description: 'Version Bump Type'
        required: true
        type: choice
        default: patch
        options:
          - major
          - minor
          - patch
jobs:
  release:
    permissions:
      contents: write
      packages: write
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Bump Go version
        id: bump_version
        uses: packagrio/action-bumpr-go@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version_bump_type: ${{ github.event.inputs.version_bump_type }}
      - name: Bump Chart version
        id: bump_chart_version
        uses: packagrio/action-bumpr-generic@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version_bump_type: ${{ github.event.inputs.version_bump_type }}
          version_metadata_path: charts/dropshipper-ui/Chart.yaml
          generic_version_template: 'version: %d.%d.%d'
          generic_merge_version_file: true
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
      - name: Build
        run: |
          git config --global --add safe.directory /__w/dropshipper-ui/dropshipper-ui
          go get -u ./...
          go build -v ./...
      - name: Build Artifacts
        run: |
          go mod vendor
  
          # build linux binary
          mkdir -p ./.assets
          go build -mod vendor -ldflags "-X main.goos=linux -X main.goarch=amd64" -o .assets/dropshipper-ui-linux-amd64 -tags "static" main.go
          go build -mod vendor -ldflags "-X main.goos=linux -X main.goarch=arm64" -o .assets/dropshipper-ui-linux-arm64 -tags "static" main.go
          
          # build windows binary
          go build -mod vendor -ldflags "-X main.goos=linux -X main.goarch=amd64" -o .assets/dropshipper-ui-windows-amd64.exe -tags "static" main.go
  
          # build mac binary
          go build -mod vendor -ldflags "-X main.goos=darwin -X main.goarch=amd64" -o .assets/dropshipper-ui-darwin-amd64 -tags "static" main.go
          go build -mod vendor -ldflags "-X main.goos=darwin -X main.goarch=arm64" -o .assets/dropshipper-ui-darwin-arm64 -tags "static" main.go
      - name: Commit Go Changes
        id: commit
        uses: packagrio/action-releasr-go@master
        env:
          # This is necessary in order to push a commit to the repo
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Leave this line unchanged
      - name: Commit Chart Changes
        id: commit_chart
        uses: packagrio/action-bumpr-generic@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version_metadata_path: charts/dropshipper-ui/Chart.yaml
          generic_version_template: 'version: %d.%d.%d'
          generic_merge_version_file: true
      - name: Publish Release
        id: publish
        uses: packagrio/action-publishr-go@master
        env:
          # This is necessary in order to push a commit to the repo
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Leave this line unchanged
        with:
          upload_assets: '.assets/dropshipper-ui-linux-amd64 .assets/dropshipper-ui-linux-arm64 .assets/dropshipper-ui-windows-amd64.exe .assets/dropshipper-ui-darwin-amd64 .assets/dropshipper-ui-darwin-arm64'
    outputs:
      version: ${{ steps.bump_version.outputs.release_version }}
  build-and-push:
    permissions:
      contents: read
      packages: write
    name: Build and Push Docker Image
    uses: ./.github/workflows/build-image.yaml
    with:
      version: "${{ needs.release.outputs.version }}"
    needs: release
  release-branch:
    name: Release Branch
    runs-on: ubuntu-latest
    needs: release
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Push changes to release branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git pull --rebase origin main
          git fetch origin release || git checkout -b release
          git checkout release
          git merge main --no-edit
          git push --set-upstream origin release --force
  publish-chart:
    name: Publish Helm Chart
    permissions:
      contents: write
      pages: write
    uses: ./.github/workflows/publish-chart.yaml
    with:
      version: "${{ needs.release.outputs.version }}"
    needs: release-branch
  publish-gh-pages:
    name: Publish GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    uses: ./.github/workflows/static.yaml
    needs: publish-chart
